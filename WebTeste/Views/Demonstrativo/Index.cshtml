@model IEnumerable<ConsultDemonstrativoModel>
@using System.Globalization
@{
    ViewData["Title"] = "Demonstrativo";
    var mesRec = ViewBag.MesRec as string ?? "";
    var nome = User.Identity.Name;
    var DepartamentoClaim = User.FindFirst("Departamento");
    var Departamento = DepartamentoClaim != null ? DepartamentoClaim.Value : "N/A";
    var IdFuncionario = User.FindFirst("Id_Func");
    var Cargo = User.FindFirst("Cargo");
    var CPF = User.FindFirst("CPF");




    // Obter o mês atual
    var mesAtual = DateTime.Now.Month;
    string nomeMesPorExtenso = ObterNomeMesPorExtenso(mesAtual);

    static string ObterNomeMesPorExtenso(int numeroMes)
    {
        // Criar um objeto CultureInfo para o idioma desejado (no exemplo, usamos o português do Brasil)
        CultureInfo cultura = new CultureInfo("pt-BR");

        // Obter o objeto DateTimeFormatInfo para a cultura
        DateTimeFormatInfo formatoData = cultura.DateTimeFormat;

        // Obter o nome do mês por extenso
        string nomeMesPorExtenso = formatoData.GetMonthName(numeroMes);
        nomeMesPorExtenso = CultureInfo.CurrentCulture.TextInfo.ToTitleCase(nomeMesPorExtenso);

        return nomeMesPorExtenso;
    }

    // Gerar uma lista de meses anteriores ao atual
    var mesesAnteriores = Enumerable.Range(1, mesAtual - 1)
                                     .Select(m => UppercaseFirst(new DateTime(1, m, 1).ToString("MMMM")))
                                     .ToList();

    // Método para capitalizar a primeira letra de uma string
    string UppercaseFirst(string s) => char.ToUpper(s[0]) + s.Substring(1);

    //Contar dias mes
    static int ContarDiasDaSemana(DateTime dataInicial, DateTime dataFinal, DayOfWeek diaDaSemana)
    {
        int quantidadeDias = 0;

        while (dataInicial.DayOfWeek != diaDaSemana)
        {
            dataInicial = dataInicial.AddDays(1);
        }

        while (dataInicial <= dataFinal)
        {
            if (dataInicial.DayOfWeek == diaDaSemana)
            {
                quantidadeDias++;
            }

            dataInicial = dataInicial.AddDays(7);
        }

        return quantidadeDias;
}
}

<link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />
<p id="passanome">@nome</p>
<p id="passadepartamento">@Departamento</p>

<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/js/bootstrap.min.js"></script>
<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/css/bootstrap.min.css" integrity="sha384-Gn5384xqQ1aoWXA+058RXPxPg6fy4IWvTNh0E263XmFcJlSAwiGgFAW/dAiS6JXm" crossorigin="anonymous">


<div class="text-center">
    <h1 class="display-4">Demonstrativo Financeiro</h1>
</div>


<div class="row">
    <div class="col-sm-2">
        <form id="selecaoForm" method="post">
            <button type="submit" class="btn btn-warning">Detalhar</button>
        </form>
    </div>
</div>


<table class="table table-striped table-bordered" style="background-color: rgba(255, 255, 255, 0.7);">
    <thead>
        <tr>
            <th scope="col">Nome</th>
            <th scope="col">CPF</th>
            <th scope="col">Cargo</th>
            <th scope="col">Data de Inicio</th>
            <th scope="col">Data Final</th>
            <th scope="col">INSS</th>
            <th scope="col">Imposto de Renda</th>
            <th scope="col">Descontos Totais</th>
            <th scope="col">Salário Final</th>
        </tr>
    </thead>
    <tbody>
        @if (Model != null)
        {

            @foreach (var demostrativo in Model)
            {
                <tr>
                    <td>@demostrativo.nome</td>
                    <td>@demostrativo.cpf</td>
                    <td>@demostrativo.cargo</td>
                    <td>@demostrativo.dataInicio.ToString("dd/MM/yyyy")</td>
                    <td>@demostrativo.dataFinal.ToString("dd/MM/yyyy")</td>
                    <td>@demostrativo.inss</td>
                    <td>@demostrativo.impostoRenda</td>
                    <td> @(Convert.ToDecimal(demostrativo.inss) + Convert.ToDecimal(demostrativo.impostoRenda))</td>
                    <td>@demostrativo.salarioFinal</td>
                </tr>
            }
        }

    </tbody>
</table>


<!-- Modal -->

<div class="modal fade" id="detalhesModal" tabindex="-1" role="dialog" aria-labelledby="detalhesModalLabel" aria-hidden="true" style="min-height: 80vh;">
    <div class="modal-dialog modal-lg" role="document">
        <div class="modal-content border rounded">
            <div class="container" style="background-color: #ffc000; color: black;  border-radius: 1.25rem 1.25rem ; display: flex; align-items: center; justify-content: space-between; padding: 15px;">
                <!-- Container para o nome da empresa -->
                <div class="container">
                    <h6 class="modal-title">BATATA - FRITANDO SEUS PROBLEMAS </h6>
                    <h7 class="modal-title">CNPJ: 99.999.999/0001-99</h7>
                    
                </div>
                <!-- Container para as informações do mês e ano -->
                <div class="container text-right">
                    <h6>Demonstrativo de Pagamento Salário<br />Contra Cheque<p id="modalMesAno"></p></h6>


                </div>
            </div>
            <div class="modal-body">
                <!-- Container com linha divisória -->
                <div class="container" style="background-color: rgba(238, 238, 238, 0.5); padding: 10px; border-radius: 1.25rem 1.25rem ; ">
                    <!-- Container para as informações do funcionário -->
                    <div class="container">
                        <h6>Informações do Funcionário</h6>
                        <p>Nome: @nome</p>
                        <p>Departamento: @Departamento</p>
                        <p>@Cargo </p>
                        <p>@CPF </p>
                    </div>
                </div>
                <br />
                <!-- Container para os detalhes do demonstrativo -->
                <!-- Adicione mais detalhes conforme necessário -->
                @if (Model != null)
                {

                    // Serializar os dados no C# e passar para o JavaScript



                    @foreach (var demonstrativo in Model)
                    {
                       
                        {
                            <div class="container" style="background-color:  rgba(255, 255, 255, 0.7); padding: 10px; border-radius: 1.25rem 1.25rem;">
                                <h6 class="text-center">Detalhes do Demonstrativo: @demonstrativo.dataFinal.Month/@demonstrativo.dataInicio.Year  </h6>
                                <table class="table table-bordered" style="background-color: rgba(255, 255, 255, 0.7);">
                                   

                                    <thead>

                                        <tr>
                                            <th colspan="2">Descrição</th>
                                            <th scope="col">Referência</th>
                                            <th scope="col">Descontos</th>
                                            <th scope="col">Vencimentos</th>

                                        </tr>
                                    </thead>
                                    <tbody>
                                        <tr>
                                            <td colspan="2">Vale Refeição</td>
                                            <td style ="text-align: left;">@demonstrativo.valeRefeicao</td>
                                            <td style="text-align: center;">0,00</td>
                                            <td style="text-align: right;">@demonstrativo.valeRefeicao</td>
                                        </tr>
                                        <tr>
                                            <td colspan="2">Vale Transporte</td>
                                            <td style ="text-align: left;">@demonstrativo.valeTransporte</td>
                                            <td style ="text-align: center;"> 0,00 </td>
                                            <td style="text-align: right;"> @demonstrativo.valeTransporte</td>
                                        </tr>
                                        <tr>
                                            <td colspan="2">INSS</td>
                                            <td style="text-align: left;">@demonstrativo.inss</td>
                                            <td style="text-align: center;">-@demonstrativo.inss</td>
                                            <td style="text-align: right;">0,00</td>
                                        </tr>
                                        <tr>
                                            <td colspan="2">Imposto de Renda</td>
                                            <td style="text-align: left;">@demonstrativo.impostoRenda</td>
                                            <td style="text-align: center;">-@demonstrativo.impostoRenda</td>
                                            <td style="text-align: right;">0,00</td>
                                        </tr>
                                        <tr>
                                            <td colspan="2">Valor Hora</td>
                                            <td style="text-align: left;">@demonstrativo.valorHora</td>
                                            <td style="text-align: center;">
                                                    @{
                                                        int ano = demonstrativo.dataInicio.Year;
                                                        int mes = demonstrativo.dataInicio.Month;
                                                        DateTime primeiroDiaDoMes = new DateTime(ano, mes, 1);
                                                        DateTime ultimoDiaDoMes = primeiroDiaDoMes.AddMonths(1).AddDays(-1);
                                                        int sabados = ContarDiasDaSemana(primeiroDiaDoMes, ultimoDiaDoMes, DayOfWeek.Saturday);
                                                        int domingos = ContarDiasDaSemana(primeiroDiaDoMes, ultimoDiaDoMes, DayOfWeek.Sunday);
                                                        int diasMes = (DateTime.DaysInMonth(ano, mes) - sabados - domingos);
                                                    }
                                                -@(diasMes * (Convert.ToDecimal(demonstrativo.valorHora) * 8) - demonstrativo.salarioBase)
                                            </td>
                                            <td style="text-align: right;">@demonstrativo.salarioBase</td>
                                        </tr>
                                        <tr>
                                            <td colspan="3">Observações</td>
                                            <td>Total Desc. -@(Convert.ToDecimal(demonstrativo.inss) + Convert.ToDecimal(demonstrativo.impostoRenda) + (diasMes * (Convert.ToDecimal(demonstrativo.valorHora) * 8) - demonstrativo.salarioBase))</td>
                                            <td>Total Venc. @demonstrativo.salarioFinal</td>
                                        </tr>
                                        <tr>
                                            <td colspan="3" rowspan="2"></td>

                                        </tr>
                                        <tr>
                                            <td colspan="3">Total Líquido: @demonstrativo.salarioFinal </td>
                                        </tr>
                                        <!-- Adicione mais linhas conforme necessário -->
                                    </tbody>
                                </table>
                            </div>
                            <br />
                        }
                    }
                }

            </div>
            <div class="modal-footer" style="background-color: #f8f9fa; border-top: 1px solid #ddd; border-radius: 0 0 0.25rem 0.25rem;">
                <button type="button" class="btn btn-secondary" onclick="fecharModal()">Fechar</button>
            </div>
        </div>
    </div>
</div>



<script>
    // Definir uma variável global para armazenar o valor de mesRec
    var mesRec;

    function abrirModal() {
        $('#detalhesModal').modal('show');
    }

    // Função para fechar a modal
    function fecharModal() {
        $('#detalhesModal').modal('hide');
    }

    // Adicione isso ao seu botão de submit
    function abrirModal() {
        $('#detalhesModal').modal('show');
    }

    function fecharModal() {
        $('#detalhesModal').modal('hide');
    }

    // Adicione isso ao seu botão de submit
    $(document).ready(function () {
        $('form').submit(function (e) {
            // Impede o envio padrão do formulário
            e.preventDefault();

            // Obter o valor selecionado do mês
            var mesSelecionado = $('#selecaoPonto').val();

            /*
            // Realizar a chamada AJAX para a controladora
            $.ajax({
                type: 'POST',
                url: '@Url.Action("Consulta", "Demonstrativo")', // Substitua "Demonstrativo" pelo nome do seu controlador
                data: { mesSelecionado: mesSelecionado },
                success: function (data) {
                    // Manipular a resposta do servidor, se necessário
                    abrirModal();
                    $('#modalMesAno').text("Mês Selecionado: " + mesSelecionado);
                },
                error: function () {
                    // Lidar com erros, se houver
                }
            });
            */
            abrirModal();
        });
    });
</script>